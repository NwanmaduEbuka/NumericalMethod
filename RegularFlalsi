Program RegularFalsi (Input,Output);
uses crt;

var
        a,b,c,fa,fb,fc,eval,tolerance : real;
        count:integer;
        ch: char;


function fal (x:real):real;
begin
        fal:= x * x * x - x - 1
end;


function falsi (e,f: real):real;
begin
        falsi :=  a - ((fal(a) * (b - a)) / (fal(b) - fal(a)))
end;


begin
        clrscr;

        Writeln('Please Enter value for A here');
        Read(a);
        fa := fal(a);
        writeln('fa =',fa:2:3);

        Writeln('Please Enter value for B here');
        Read(b);
        fb := fal(b);
        writeln('fb =', fb:2:3);

        Writeln('Please enter tolerance value here');
        readln(tolerance);

        writeln('Val A ','  Val B ','  Val C ','Val FuncA ','Val FuncB ','Val FuncC ',' Eval ');
        count := 0;
repeat
        if (fa * fb >= 0) then
                begin
                        Writeln('Function values at endpoints must have opposite signs');
                        exit;
                end
        else if (fa * fb < 0 ) then
                begin
                        c :=  falsi(a,b);
                        fc := fal(c);
                        writeln(a :2:3 ,' | ',b :2:3,' | ',c :2:3,' | ',fa :2:3,' | ',fb :2:3,' | ',fc :2:3,' | ',eval :2:3);
                        Writeln('______________________________________________________________');
                        eval := abs(fal(c)) ;

                        if (fc = 0) then
                                begin
                                        writeln('Bisection := c');
                                        exit;
                                end
                        else if(fa * fc < 0) then
                                begin
                                        b := c;
                                        fb := fal(c)
                                end
                                else
                                begin
                                        a := c;
                                        fa := fal(c)
                                end;
                                {writeln(a :2:3 ,'  ',b :2:3,'  ',c :2:3,'  ',fa :2:3,'  ',fb :2:3,'  ',fc :2:3,'  ',eval :2:3);   }
                                count := count + 1;
                end;
until ({count >= 5} eval <= tolerance);
                writeln('The root is  ',c:0:6);
                readln (ch);
end.
